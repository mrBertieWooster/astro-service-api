name: Deploy Astro-Service

on:
  push:
    branches:
      - main
  workflow_dispatch:  

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Укажите версию Python, которую вы используете

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Export environment variables
        run: |
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> $GITHUB_ENV
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> $GITHUB_ENV
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> $GITHUB_ENV
          echo "RABBITMQ_HOST=${{ secrets.RABBITMQ_HOST }}" >> $GITHUB_ENV
          echo "RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}" >> $GITHUB_ENV
          echo "RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}" >> $GITHUB_ENV
          echo "RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}" >> $GITHUB_ENV

      - name: Run tests
        run: |
          pytest 

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Деплой будет запущен только после успешного завершения тестов

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Copy files to remote server
        run: |
          scp -P ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no -r . ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_DIR }}

      - name: Install dependencies on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} -p ${{ secrets.SSH_PORT }} "cd ${{ secrets.REMOTE_DIR }} && python3 -m venv venv \
                          && source venv/bin/activate && pip install -r requirements.txt"

      - name: Add env on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} -p ${{ secrets.SSH_PORT }} "export POSTGRES_USER=${{ secrets.POSTGRES_USER }} && \
                  export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} && export OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} && export DATABASE_URL=${{ secrets.DATABASE_URL }}"

      - name: Restart application
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} -p ${{ secrets.SSH_PORT }} "systemctl restart astro-service.service"